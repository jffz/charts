apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lazylibrarian.fullname" . }}
  labels:
  {{- include "lazylibrarian.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
  {{- include "lazylibrarian.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "lazylibrarian.name" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lazylibrarian.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "lazylibrarian.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            - name: PUID
              value: {{ .Values.puid | quote }}
            - name: PGID
              value: {{ .Values.pgid | quote }}
            - name: DOCKER_MODS
              value: {{ include "lazylibrarian.enabledAddons" . }}
          volumeMounts:
            - name: config
              mountPath: /config
            {{- include "lazylibrarian.extraVolumeMounts" . | nindent 12 }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: {{ .Values.probes.liveness.scheme }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: {{ .Values.probes.readiness.scheme }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: {{ .Values.probes.startup.scheme }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        {{- if not .Values.persistence.enabled }}
        - name: config
          emptyDir: {}
        {{- end }}
        {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
        {{- include "lazylibrarian.extraVolumes" . | nindent 8 }}

  volumeClaimTemplates:
    {{- if and .Values.persistence.enabled ( not .Values.persistence.existingClaim ) }}
    - metadata:
        name: config
        labels:
        {{- include "lazylibrarian.labels" . | nindent 10 }}
        {{- if .Values.persistence.annotations  }}
        annotations:
        {{- toYaml .Values.persistence.annotations | nindent 10 }}
      {{- end }}
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
  {{- end }}
  {{- end }}